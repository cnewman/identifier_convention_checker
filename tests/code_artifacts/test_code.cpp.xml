<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C++" filename="code_containing_identifiers_to_test.cpp" pos:tabs="8"><cpp:include pos:start="1:1" pos:end="1:19">#<cpp:directive pos:start="1:2" pos:end="1:8">include</cpp:directive> <cpp:file pos:start="1:10" pos:end="1:19">&lt;iostream&gt;</cpp:file></cpp:include>
<cpp:include pos:start="2:1" pos:end="2:17">#<cpp:directive pos:start="2:2" pos:end="2:8">include</cpp:directive> <cpp:file pos:start="2:10" pos:end="2:17">&lt;string&gt;</cpp:file></cpp:include>
<cpp:include pos:start="3:1" pos:end="3:17">#<cpp:directive pos:start="3:2" pos:end="3:8">include</cpp:directive> <cpp:file pos:start="3:10" pos:end="3:17">&lt;vector&gt;</cpp:file></cpp:include>

<function pos:start="5:1" pos:end="10:1"><type pos:start="5:1" pos:end="5:3"><name pos:start="5:1" pos:end="5:3">int</name></type> <name pos:start="5:5" pos:end="5:34">function_with_mixed_heuristics</name><parameter_list pos:start="5:35" pos:end="5:36">()</parameter_list><block pos:start="5:37" pos:end="10:1">{<block_content pos:start="7:9" pos:end="9:18">
	<comment type="line" pos:start="6:9" pos:end="6:41">//first some tests for heuristics</comment>
	<decl_stmt pos:start="7:9" pos:end="7:24"><decl pos:start="7:9" pos:end="7:23"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:23">token_count</name></decl>;</decl_stmt>
	<decl_stmt pos:start="8:9" pos:end="8:27"><decl pos:start="8:9" pos:end="8:26"><type pos:start="8:9" pos:end="8:11"><name pos:start="8:9" pos:end="8:11">int</name></type> <name pos:start="8:13" pos:end="8:26">tokenMax_count</name></decl>;</decl_stmt>
	<decl_stmt pos:start="9:9" pos:end="9:18"><decl pos:start="9:9" pos:end="9:17"><type pos:start="9:9" pos:end="9:11"><name pos:start="9:9" pos:end="9:11">int</name></type> <name pos:start="9:13" pos:end="9:17">Token</name></decl>;</decl_stmt>
</block_content>}</block></function>

<function pos:start="12:1" pos:end="16:1"><type pos:start="12:1" pos:end="12:3"><name pos:start="12:1" pos:end="12:3">int</name></type> <name pos:start="12:5" pos:end="12:50">function_with_consistent_underscore_heuristics</name><parameter_list pos:start="12:51" pos:end="12:52">()</parameter_list><block pos:start="12:53" pos:end="16:1">{<block_content pos:start="13:9" pos:end="15:18">
	<decl_stmt pos:start="13:9" pos:end="13:24"><decl pos:start="13:9" pos:end="13:23"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:23">token_count</name></decl>;</decl_stmt>
	<decl_stmt pos:start="14:9" pos:end="14:22"><decl pos:start="14:9" pos:end="14:21"><type pos:start="14:9" pos:end="14:11"><name pos:start="14:9" pos:end="14:11">int</name></type> <name pos:start="14:13" pos:end="14:21">token_max</name></decl>;</decl_stmt>
	<decl_stmt pos:start="15:9" pos:end="15:18"><decl pos:start="15:9" pos:end="15:17"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:17">token</name></decl>;</decl_stmt>
</block_content>}</block></function>

<function pos:start="18:1" pos:end="22:1"><type pos:start="18:1" pos:end="18:3"><name pos:start="18:1" pos:end="18:3">int</name></type> <name pos:start="18:5" pos:end="18:45">functionWithConsistentCamelCaseHeuristics</name><parameter_list pos:start="18:46" pos:end="18:47">()</parameter_list><block pos:start="18:48" pos:end="22:1">{<block_content pos:start="19:9" pos:end="21:18">
	<decl_stmt pos:start="19:9" pos:end="19:23"><decl pos:start="19:9" pos:end="19:22"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:22">tokenCount</name></decl>;</decl_stmt>
	<decl_stmt pos:start="20:9" pos:end="20:21"><decl pos:start="20:9" pos:end="20:20"><type pos:start="20:9" pos:end="20:11"><name pos:start="20:9" pos:end="20:11">int</name></type> <name pos:start="20:13" pos:end="20:20">tokenMax</name></decl>;</decl_stmt>
	<decl_stmt pos:start="21:9" pos:end="21:18"><decl pos:start="21:9" pos:end="21:17"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:17">token</name></decl>;</decl_stmt>
</block_content>}</block></function>

<function pos:start="24:1" pos:end="36:1"><type pos:start="24:1" pos:end="24:4"><name pos:start="24:1" pos:end="24:4">void</name></type> <name pos:start="24:6" pos:end="24:37">functionWithSingularPluralIssues</name><parameter_list pos:start="24:38" pos:end="24:39">()</parameter_list><block pos:start="24:40" pos:end="36:1">{<block_content pos:start="25:9" pos:end="35:22">
	<decl_stmt pos:start="25:9" pos:end="25:39"><decl pos:start="25:9" pos:end="25:38"><type pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:11">std</name><operator pos:start="25:12" pos:end="25:13">::</operator><name pos:start="25:14" pos:end="25:19">vector</name><argument_list type="generic" pos:start="25:20" pos:end="25:32">&lt;<argument pos:start="25:21" pos:end="25:31"><expr pos:start="25:21" pos:end="25:31"><name pos:start="25:21" pos:end="25:31"><name pos:start="25:21" pos:end="25:23">std</name><operator pos:start="25:24" pos:end="25:25">::</operator><name pos:start="25:26" pos:end="25:31">string</name></name></expr></argument>&gt;</argument_list></name></type> <name pos:start="25:34" pos:end="25:38">token</name></decl>;</decl_stmt>
	<decl_stmt pos:start="26:9" pos:end="26:19"><decl pos:start="26:9" pos:end="26:18"><type pos:start="26:9" pos:end="26:11"><name pos:start="26:9" pos:end="26:11">int</name></type> <name pos:start="26:13" pos:end="26:18">tokens</name></decl>;</decl_stmt>
	
	<decl_stmt pos:start="28:9" pos:end="28:39"><decl pos:start="28:9" pos:end="28:38"><type pos:start="28:9" pos:end="28:32"><name pos:start="28:9" pos:end="28:32"><name pos:start="28:9" pos:end="28:11">std</name><operator pos:start="28:12" pos:end="28:13">::</operator><name pos:start="28:14" pos:end="28:19">vector</name><argument_list type="generic" pos:start="28:20" pos:end="28:32">&lt;<argument pos:start="28:21" pos:end="28:31"><expr pos:start="28:21" pos:end="28:31"><name pos:start="28:21" pos:end="28:31"><name pos:start="28:21" pos:end="28:23">std</name><operator pos:start="28:24" pos:end="28:25">::</operator><name pos:start="28:26" pos:end="28:31">string</name></name></expr></argument>&gt;</argument_list></name></type> <name pos:start="28:34" pos:end="28:38">names</name></decl>;</decl_stmt>
	<decl_stmt pos:start="29:9" pos:end="29:17"><decl pos:start="29:9" pos:end="29:16"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:16">name</name></decl>;</decl_stmt>

	<decl_stmt pos:start="31:9" pos:end="31:16"><decl pos:start="31:9" pos:end="31:15"><type pos:start="31:9" pos:end="31:12"><name pos:start="31:9" pos:end="31:11">int</name><modifier pos:start="31:12" pos:end="31:12">*</modifier></type> <name pos:start="31:14" pos:end="31:15">id</name></decl>;</decl_stmt>
	<decl_stmt pos:start="32:9" pos:end="32:21"><decl pos:start="32:9" pos:end="32:20"><type pos:start="32:9" pos:end="32:11"><name pos:start="32:9" pos:end="32:11">int</name></type> <name pos:start="32:13" pos:end="32:20"><name pos:start="32:13" pos:end="32:16">code</name><index pos:start="32:17" pos:end="32:20">[<expr pos:start="32:18" pos:end="32:19"><literal type="number" pos:start="32:18" pos:end="32:19">10</literal></expr>]</index></name></decl>;</decl_stmt>

	<decl_stmt pos:start="34:9" pos:end="34:17"><decl pos:start="34:9" pos:end="34:16"><type pos:start="34:9" pos:end="34:12"><name pos:start="34:9" pos:end="34:11">int</name><modifier pos:start="34:12" pos:end="34:12">*</modifier></type> <name pos:start="34:14" pos:end="34:16">ids</name></decl>;</decl_stmt>
	<decl_stmt pos:start="35:9" pos:end="35:22"><decl pos:start="35:9" pos:end="35:21"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:17">codes</name><index pos:start="35:18" pos:end="35:21">[<expr pos:start="35:19" pos:end="35:20"><literal type="number" pos:start="35:19" pos:end="35:20">10</literal></expr>]</index></name></decl>;</decl_stmt>
</block_content>}</block></function>

<function pos:start="38:1" pos:end="41:1"><type pos:start="38:1" pos:end="38:4"><name pos:start="38:1" pos:end="38:4">void</name></type> <name pos:start="38:6" pos:end="38:37">functionWithDictionaryTermIssues</name><parameter_list pos:start="38:38" pos:end="38:39">()</parameter_list><block pos:start="38:40" pos:end="41:1">{<block_content pos:start="39:9" pos:end="40:16">
	<decl_stmt pos:start="39:9" pos:end="39:16"><decl pos:start="39:9" pos:end="39:15"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:15">tkn</name></decl>;</decl_stmt>
	<decl_stmt pos:start="40:9" pos:end="40:16"><decl pos:start="40:9" pos:end="40:15"><type pos:start="40:9" pos:end="40:11"><name pos:start="40:9" pos:end="40:11">int</name></type> <name pos:start="40:13" pos:end="40:15">nme</name></decl>;</decl_stmt>
</block_content>}</block></function></unit>
